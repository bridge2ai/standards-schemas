BASE <https://w3id.org/bridge2ai/standards-schema-all/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX schema: <http://schema.org/>
PREFIX STANDARDS: <https://w3id.org/bridge2ai/standards-schema/>
PREFIX STANDARDSDATATOPIC: <https://w3id.org/bridge2ai/standards-datatopic-schema/>
PREFIX STANDARDSDATASUBSTRATE: <https://w3id.org/bridge2ai/standards-datasubstrate-schema/>
PREFIX STANDARDSORGANIZATION: <https://w3id.org/bridge2ai/standards-organization-schema/>
PREFIX STANDARDSDATASTANDARDORTOOL: <https://w3id.org/bridge2ai/standards-datastandardortool-schema/>
PREFIX STANDARDSUSECASE: <https://w3id.org/bridge2ai/standards-usecase-schema/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

STANDARDS:EdamIdentifier IRI

STANDARDS:MeshIdentifier IRI

STANDARDS:NcitIdentifier IRI

STANDARDSORGANIZATION:RorIdentifier IRI

STANDARDSORGANIZATION:WikidataIdentifier IRI

STANDARDSDATASTANDARDORTOOL:BiomedicalStandard CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:BiomedicalStandard_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandard_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandard ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:BiomedicalStandard ]
    )
}

STANDARDSDATASTANDARDORTOOL:DataStandard  (
    CLOSED {
       (  $STANDARDSDATASTANDARDORTOOL:DataStandard_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
             rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
          ) ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandard ]
       )
    } OR @STANDARDSDATASTANDARDORTOOL:BiomedicalStandard
)

STANDARDSDATASTANDARDORTOOL:DataStandardOrTool  (
    CLOSED {
       (  $STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes (  &STANDARDS:NamedThing_tes ;
             rdf:type [ schema:Thing ] ? ;
             STANDARDSDATASTANDARDORTOOL:collection @STANDARDSDATASTANDARDORTOOL:StandardsCollectionTag * ;
             STANDARDSDATASTANDARDORTOOL:concerns_data_topic @STANDARDSDATATOPIC:DataTopic * ;
             STANDARDSDATASTANDARDORTOOL:has_relevant_organization @STANDARDSORGANIZATION:Organization * ;
             STANDARDSDATASTANDARDORTOOL:purpose_detail @linkml:String ? ;
             STANDARDSDATASTANDARDORTOOL:is_open @linkml:Boolean ? ;
             STANDARDSDATASTANDARDORTOOL:requires_registration @linkml:Boolean ? ;
             STANDARDS:url @linkml:Uriorcurie ? ;
             STANDARDSDATASTANDARDORTOOL:publication @linkml:Uriorcurie ? ;
             STANDARDSDATASTANDARDORTOOL:formal_specification @linkml:Uriorcurie ?
          ) ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ]
       )
    } OR @STANDARDSDATASTANDARDORTOOL:DataStandard OR @STANDARDSDATASTANDARDORTOOL:ModelRepository OR
    @STANDARDSDATASTANDARDORTOOL:OntologyOrVocabulary OR @STANDARDSDATASTANDARDORTOOL:ReferenceDataOrDataset OR
    @STANDARDSDATASTANDARDORTOOL:ReferenceImplementation OR @STANDARDSDATASTANDARDORTOOL:Registry OR
    @STANDARDSDATASTANDARDORTOOL:SoftwareOrTool OR @STANDARDSDATASTANDARDORTOOL:TrainingProgram
)

STANDARDSDATASTANDARDORTOOL:DataStandardOrToolContainer CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:DataStandardOrToolContainer_tes STANDARDSDATASTANDARDORTOOL:data_standardortools_collection
       @STANDARDSDATASTANDARDORTOOL:DataStandardOrTool * ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrToolContainer ] ?
    )
}

STANDARDSDATASUBSTRATE:DataSubstrate CLOSED {
    (  $STANDARDSDATASUBSTRATE:DataSubstrate_tes (  &STANDARDS:NamedThing_tes ;
          rdf:type [ schema:Thing ] ? ;
          STANDARDS:edam_id @STANDARDS:EdamIdentifier ? ;
          STANDARDS:mesh_id @STANDARDS:MeshIdentifier ? ;
          STANDARDS:ncit_id @STANDARDS:NcitIdentifier ? ;
          STANDARDSDATASUBSTRATE:metadata_storage @linkml:String * ;
          STANDARDSDATASUBSTRATE:file_extensions @linkml:String * ;
          STANDARDSDATASUBSTRATE:limitations @linkml:String *
       ) ;
       rdf:type [ STANDARDSDATASUBSTRATE:DataSubstrate ]
    )
}

STANDARDSDATASUBSTRATE:DataSubstrateContainer CLOSED {
    (  $STANDARDSDATASUBSTRATE:DataSubstrateContainer_tes STANDARDSDATASUBSTRATE:data_substrates_collection
       @STANDARDSDATASUBSTRATE:DataSubstrate * ;
       rdf:type [ STANDARDSDATASUBSTRATE:DataSubstrateContainer ] ?
    )
}

STANDARDSDATATOPIC:DataTopic CLOSED {
    (  $STANDARDSDATATOPIC:DataTopic_tes (  &STANDARDS:NamedThing_tes ;
          rdf:type [ schema:Thing ] ? ;
          STANDARDS:edam_id @STANDARDS:EdamIdentifier ? ;
          STANDARDS:mesh_id @STANDARDS:MeshIdentifier ? ;
          STANDARDS:ncit_id @STANDARDS:NcitIdentifier ?
       ) ;
       rdf:type [ STANDARDSDATATOPIC:DataTopic ]
    )
}

STANDARDSDATATOPIC:DataTopicContainer CLOSED {
    (  $STANDARDSDATATOPIC:DataTopicContainer_tes STANDARDSDATATOPIC:data_topics_collection @STANDARDSDATATOPIC:DataTopic * ;
       rdf:type [ STANDARDSDATATOPIC:DataTopicContainer ] ?
    )
}

STANDARDSDATASTANDARDORTOOL:ModelRepository CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:ModelRepository_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:ModelRepository ]
    )
}

STANDARDS:NamedThing  (
    CLOSED {
       (  $STANDARDS:NamedThing_tes (  schema:name @linkml:String ? ;
             schema:description @linkml:String ? ;
             STANDARDS:subclass_of @STANDARDS:NamedThing *
          ) ;
          rdf:type [ schema:Thing ]
       )
    } OR @STANDARDSDATASTANDARDORTOOL:DataStandardOrTool OR @STANDARDSDATASUBSTRATE:DataSubstrate OR @STANDARDSDATATOPIC:DataTopic
    OR @STANDARDSORGANIZATION:Organization OR @STANDARDSUSECASE:UseCase
)

STANDARDSDATASTANDARDORTOOL:OntologyOrVocabulary CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:OntologyOrVocabulary_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:OntologyOrVocabulary ]
    )
}

STANDARDSORGANIZATION:Organization CLOSED {
    (  $STANDARDSORGANIZATION:Organization_tes (  &STANDARDS:NamedThing_tes ;
          rdf:type [ schema:Thing ] ? ;
          STANDARDSORGANIZATION:ror_id @STANDARDSORGANIZATION:RorIdentifier ? ;
          STANDARDSORGANIZATION:wikidata_id @STANDARDSORGANIZATION:WikidataIdentifier ? ;
          STANDARDS:url @linkml:Uriorcurie ? ;
          STANDARDS:related_to @STANDARDS:NamedThing *
       ) ;
       rdf:type [ STANDARDSORGANIZATION:Organization ]
    )
}

STANDARDSORGANIZATION:OrganizationContainer CLOSED {
    (  $STANDARDSORGANIZATION:OrganizationContainer_tes STANDARDSORGANIZATION:organizations @STANDARDSORGANIZATION:Organization * ;
       rdf:type [ STANDARDSORGANIZATION:OrganizationContainer ] ?
    )
}

STANDARDSDATASTANDARDORTOOL:ReferenceDataOrDataset CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:ReferenceDataOrDataset_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:ReferenceDataOrDataset ]
    )
}

STANDARDSDATASTANDARDORTOOL:ReferenceImplementation CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:ReferenceImplementation_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:ReferenceImplementation ]
    )
}

STANDARDSDATASTANDARDORTOOL:Registry CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:Registry_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:Registry ]
    )
}

STANDARDSDATASTANDARDORTOOL:SoftwareOrTool CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:SoftwareOrTool_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:SoftwareOrTool ]
    )
}

STANDARDSDATASTANDARDORTOOL:TrainingProgram CLOSED {
    (  $STANDARDSDATASTANDARDORTOOL:TrainingProgram_tes (  &STANDARDSDATASTANDARDORTOOL:DataStandardOrTool_tes ;
          rdf:type [ STANDARDSDATASTANDARDORTOOL:DataStandardOrTool ] ?
       ) ;
       rdf:type [ STANDARDSDATASTANDARDORTOOL:TrainingProgram ]
    )
}

STANDARDSUSECASE:UseCase CLOSED {
    (  $STANDARDSUSECASE:UseCase_tes (  &STANDARDS:NamedThing_tes ;
          rdf:type [ schema:Thing ] ? ;
          STANDARDSUSECASE:use_case_category @STANDARDSUSECASE:UseCaseCategory ;
          STANDARDSUSECASE:known_limitations @linkml:String ? ;
          STANDARDSUSECASE:relevance_to_dgps @STANDARDS:DataGeneratingProject * ;
          STANDARDSUSECASE:data_topics @STANDARDSDATATOPIC:DataTopic * ;
          STANDARDSUSECASE:data_substrates @STANDARDSDATASUBSTRATE:DataSubstrate * ;
          STANDARDSUSECASE:standards_and_tools_for_dgp_use @STANDARDSDATASTANDARDORTOOL:DataStandardOrTool * ;
          STANDARDSUSECASE:alternative_standards_and_tools @STANDARDSDATASTANDARDORTOOL:DataStandardOrTool * ;
          STANDARDSUSECASE:enables @STANDARDSUSECASE:UseCase * ;
          STANDARDSUSECASE:involved_in_experimental_design @linkml:Boolean ? ;
          STANDARDSUSECASE:involved_in_metadata_management @linkml:Boolean ? ;
          STANDARDSUSECASE:involved_in_quality_control @linkml:Boolean ? ;
          STANDARDS:xref @linkml:Uriorcurie *
       ) ;
       rdf:type [ STANDARDSUSECASE:UseCase ]
    )
}

STANDARDSUSECASE:UseCaseContainer CLOSED {
    (  $STANDARDSUSECASE:UseCaseContainer_tes STANDARDSUSECASE:use_cases @STANDARDSUSECASE:UseCase * ;
       rdf:type [ STANDARDSUSECASE:UseCaseContainer ] ?
    )
}


